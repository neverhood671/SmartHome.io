var is_dragging;

function addOnClickEventListeners(e, t) {
    Array.from(document.querySelectorAll(e)).forEach(e => {
        e.addEventListener("click", e => {
            e.currentTarget.classList.contains(t) ? e.currentTarget.classList.remove(t) : e.currentTarget.classList.add(t);
        }, !0);
    });
}

function addMouseoverMousoutEventListeners(e, t) {
    Array.from(document.querySelectorAll(e)).forEach(e => {
        e.addEventListener("mouseover", e => {
            e.currentTarget.classList.add(t);
        }, !0);
    }), Array.from(document.querySelectorAll(e)).forEach(e => {
        e.addEventListener("mouseout", e => {
            e.currentTarget.classList.remove(t);
        }, !0);
    });
}

function clearPopup() {
    let e = document.querySelector(".popup_window");
    Array.from(document.querySelectorAll(".popup_window .device_def")).forEach(t => {
        e.removeChild(t);
    }), e.classList.contains("temp_popup") ? e.classList.remove("temp_popup") : e.classList.contains("light_popup") ? e.classList.remove("light_popup") : e.classList.contains("floor_popup") && e.classList.remove("floor_popup");
}

function initPopup() {
    Array.from(document.querySelectorAll(".device_card")).forEach(e => {
        e.addEventListener("click", e => {
            clearPopup();
            Array.from(e.currentTarget.childNodes);
            let t = document.querySelector(".popup_window");
            t.insertAdjacentHTML("afterBegin", e.currentTarget.innerHTML), document.querySelector(".slider").value = e.currentTarget.lastChild.innerHTML, 
            e.currentTarget.classList.contains("temp") ? t.classList.add("temp_popup") : e.currentTarget.classList.contains("light") ? t.classList.add("light_popup") : e.currentTarget.classList.contains("floor") && t.classList.add("floor_popup"), 
            document.querySelector("body").classList.add("disable_scroll"), document.querySelector(".popup").classList.add("show_popup"), 
            document.querySelector(".main_content").classList.add("blur_background"), document.querySelector(".main_header").classList.add("blur_background"), 
            document.querySelector(".footer").classList.add("blur_background");
        }, !0);
    }), document.querySelector(".close").addEventListener("click", e => {
        document.querySelector("body").classList.remove("disable_scroll"), document.querySelector(".popup").classList.remove("show_popup"), 
        document.querySelector(".main_content").classList.remove("blur_background"), document.querySelector(".main_header").classList.remove("blur_background"), 
        document.querySelector(".footer").classList.remove("blur_background");
    });
}

function initPage() {
    document.querySelector(".selected_value").innerHTML = document.querySelector(".selected").innerHTML, 
    addOnClickEventListeners(".navigation", "show_nav_dropdown"), addOnClickEventListeners(".filter", "show_device_type"), 
    addMouseoverMousoutEventListeners(".card", "card_hover"), initFilter(), initCircleRange(), 
    initVerticalScroll(), initPopup(), initScroll("scenario_arrow", "scenario_card", "scenario_cards"), 
    initScroll("devices_arrow", "device_card", "device_cards");
}

function initScroll(e, t, r) {
    document.querySelectorAll(`.${e}`).forEach(e => {
        e.addEventListener("click", e => {
            var o, c = e.currentTarget.classList.contains("next") ? -1 : 1, n = getElementWidth(document.querySelector(`.${t}`)), l = getElementWidth(document.querySelector(`.${r}`)), s = Math.floor(l / n) * n, a = /\.*translateX\((.*)px\)/i.exec(document.querySelector(`.${t}`).style.transform);
            a = null == a ? 0 : parseFloat(a[1]), ((o = a + c * s) > 0 || Math.abs(o) >= document.documentElement.clientWidth) && (o = 0), 
            document.querySelectorAll(`.${t}`).forEach(e => e.style.transform = `translateX(${o}px)`);
        });
    }, !0);
}

function initVerticalScroll() {
    document.querySelector(".scheduled_scenarios_block").addEventListener("scroll", e => {
        var t = document.querySelector(".scheduled_scenario_card:nth-of-type(3)");
        t.classList.contains("scroll") || t.classList.add("scroll"), 0 == e.target.scrollTop && t.classList.remove("scroll");
    });
}

function initFilter() {
    Array.from(document.querySelectorAll(".device_type")).forEach(e => {
        e.addEventListener("click", e => {
            document.querySelectorAll(".device_type.selected").forEach(e => e.classList.remove("selected")), 
            e.currentTarget.classList.add("selected"), document.querySelector(".selected_value").innerHTML = e.currentTarget.innerHTML, 
            Array.from(document.querySelectorAll(".hide")).forEach(e => e.classList.remove("hide"));
            var t = document.querySelector(".device_type.selected").id;
            "all" !== t && Array.from(document.querySelectorAll(".device_card")).filter(e => t !== e.dataset.room && t !== e.dataset.type).forEach(e => {
                e.classList.add("hide");
            });
        });
    });
}

function initCircleRange() {
    is_dragging = !1, addListenerMulti(document.querySelector(".circle"), "mousedown touchstart", e => is_dragging = !0), 
    addListenerMulti(document.querySelector(".circle"), "mouseup touchend", e => is_dragging = !1), 
    addListenerMulti(document.querySelector(".circle"), "mousemove touchmove", e => {
        if (is_dragging) {
            var t;
            document.querySelector(".circle");
            e.changedTouches && (t = e.changedTouches[0]);
            var r, o = document.querySelector(".circle").offsetWidth / 2 + getOffset(document.querySelector(".circle")).left, c = document.querySelector(".circle").offsetHeight / 2 + getOffset(document.querySelector(".circle")).top, n = e.pageX || t.pageX, l = c - (e.pageY || t.pageY), s = o - n;
            if ((r = (r = Math.atan2(l, s) * (180 / Math.PI)) - 90) < 0 && (r = 360 + r), (r = Math.round(r)) < 140 || r > 220) {
                document.querySelector(".dot").setAttribute("style", "transform: rotate(" + r + "deg)");
                let e = Math.round(r > 180 ? 2 * (r - 180) / 15 - 14 : 10 + 2 * r / 15);
                document.querySelector(".temp_display").innerHTML = e > 0 ? "+" + e : e;
            }
        }
    });
}

function getOffset(e) {
    return e.getBoundingClientRect ? getOffsetRect(e) : getOffsetSum(e);
}

function getOffsetSum(e) {
    for (var t = 0, r = 0; e; ) t += parseInt(e.offsetTop), r += parseInt(e.offsetLeft), 
    e = e.offsetParent;
    return {
        top: t,
        left: r
    };
}

function getOffsetRect(e) {
    var t = e.getBoundingClientRect(), r = document.body, o = document.documentElement, c = window.pageYOffset || o.scrollTop || r.scrollTop, n = window.pageXOffset || o.scrollLeft || r.scrollLeft, l = o.clientTop || r.clientTop || 0, s = o.clientLeft || r.clientLeft || 0, a = t.top + c - l, i = t.left + n - s;
    return {
        top: Math.round(a),
        left: Math.round(i)
    };
}

function addListenerMulti(e, t, r) {
    t.split(" ").forEach(t => e.addEventListener(t, r, !1));
}

function getElementWidth(e) {
    var t = e.currentStyle || window.getComputedStyle(e);
    return e.offsetWidth + (parseFloat(t.marginLeft) + parseFloat(t.marginRight)) - (parseFloat(t.paddingLeft) + parseFloat(t.paddingRight)) + (parseFloat(t.borderLeftWidth) + parseFloat(t.borderRightWidth));
}